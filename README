README file for bazinga 0.1a

1. ..... What is bazinga?
1.1. ... Why is it better than XYZ?
1.2. ... Name
2. ..... Setup
2.1. ... Configuration
2.2. ... Directory Structure
3. ..... Features
3.1. ... Keywords
3.1.1. . Text Formating
3.1.2. . LaTeX-insertion
3.1.3. . Gnuplot-insertion
3.1.4. . Image-insertion
3.1.5. . Image Galeries
3.2. ... Usage Scenarios
4. ..... Credits
4.1. ... License


1. WHAT IS BAZINGA?

bazinga is a small and (maybe) simple commandline interface which lets you publish articles
on a blog without the need of PHP/MySQL or CGI. It produces plain HTML-files in a clean and
reasonable directory structure and links them together. This seems quite static at a first 
look, but the advantages of this model are clear: you don't need a webhoster which allows
previously mentioned features. The pages produced should be 100 % display-able by any common
HTTP server.


1.1. WHY IS IT BETTER THAN XYZ?

To be honest, it clearly isn't better than any other blog software and maybe cannot even 
compete with them in flexibility and feature-richness, but the clear advantages are:

    - completely independent from fancy features (eq. PHP)
    - easy to maintain
    - easy to make backups (just backup the files and you're fine)
    - commandline interface ('bzg') (that's where git and nanoblogger inspired me)

Of course, if you aren't used to work with terminals or generally with text editors
it might be confusing, but if you are a person like me (and I guess you are, otherwise:
why are you reading this crap anyway?) and you like working on terminals, it might be
just the piece of software you always wanted.


1.2. NAME

I chose the name bazinga because I'm a huge fan of the TV series 'Big Bang Theory', where
one of the main actors (Sheldon Cooper) uses the phrase "Bazinga!" to tell others that he
made a joke. Clearly, bazinga is too a little bit of a joke ;).


2. SETUP

Setup is pretty easy. If you read this you might already as well have installed it. It
doesn't need to be located anywhere special. The only file that needs to be in the right
place is the main configuration file, which must be located in "~/.bazinga/bazinga.conf"
or equally symlinked to this location. Some sample configuration files can be found in the
conf/ directory. All the data will be stored in a file called "~/.bazinga/bazinga.dat". It
is a perlish stored variable and won't be easy to read. It can be backed up whenever you want.


2.1. CONFIGURATION

The easiest way to get everything started is to copy one of the example configurations
from the conf/ directory to ~/.bazinga/bazinga.conf and edit it to fit your needs. 
Configuration may look Perl'ish (well, because it is), but should be pretty self-explaining.

There is also a style.css which should be put in your .bazinga-directory. You can change it
to whatever you want. bzg will then use this css to pimp your blog.


2.2. DIRECTORY STRUCTURE

Once you edited your bazinga.conf with the needed information and you added an article or page,
you can update your blog structure with "bzg update". This will create the following similar structure:

blog/
  -> index.html
  -> articles/
       -> 5238fed2.../
            -> index.html
            -> img/
                 -> 1.png
                 -> 2.png
                 -> ...
       -> 6732.../
            -> index.html
            -> ...
  -> pages/
       -> 5723498.../
            -> index.html
            -> img/
                 -> 1.png
                 -> 2.png
                 -> ...
       -> 6732.../
            -> index.html
            -> ..


3. FEATURES

bazinga doesn't have many features except some basic text-formatting rules, which can be
taken from the examples/ directory. These examples should cover the range of what is
possible. If you have feature requests or want something added, please contact me or 
implement it yourself and send me a patch. Would be awesome.

At the moment, it is possible to make bold/italic/underlined text and insert code-snippets.
The coolest feature however is the automatic conversion of LaTeX-formulae into images,
which then are inserted instead.

3.1. KEYWORDS

bazinga comes with some predefined keywords, which can be inserted in any article or page.

3.1.1. TEXT FORMATING

[b]text[/b] will produce bold text, [i]text[/i] will produce italic text, [u]text[/u] will
produce underlined text. Newline breaks will be automatically converted to <br />.

3.1.2. LATEX-INSERTION

If you want to include LaTeX-formulae, it is very simple. bazinga will use everything between
LATEX_START and LATEX_END, converts it to png and inserts it instead. For example:

LATEX_START
....
LATEX_END

3.1.3. GNUPLOT-INSERTION

With gnuplot formulae it is the same as with LaTeX. You just enter the wanted things between
GNUPLOT_START and GNUPLOT_END.

3.1.4. IMAGE-INSERTION

3.1.5. IMAGE GALLERIES


4. CREDITS

Special thanks to Linus Torvalds for creating git. It helped me a lot.
Thanks to the people over there at nanoblogger.
Thanks to stefan-k for giving me the hint with the LaTeX- and gnuplot-integration :).

4.1. LICENSE

dunno yet ...
