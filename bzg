#!/usr/bin/perl
use strict;
use warnings;
use Env qw(HOME);


# project:      bazinga
# description:  free special blogging tool, inspired by nanoblogger
# author:       Manuel Fill (ap0calypse@agitatio.org)
# license:      

my $VERSION = "0.1a";
my $CONFIG = "$HOME/.bazinga/bazinga.conf";

die "not enough parameters given, try 'bzg help' for a quick overview.\n" if scalar @ARGV < 1;
die "configuration file $CONFIG doesn't exist or isn't readable, please check.\n" unless (-e $CONFIG);

sub print_usage {
    print qq(
    bazinga $VERSION

    quick overview:
    
        bzg help
        bzg add FILE
        bzg delete ID
        bzg replace ID FILE
        bzg comment ID FILE
        bzg check FILE
        bzg update LOCAL | REMOTE

    examples:

        bzg add my_fancy_new_article.txt
        bzg replace 6783423 corrected_article.txt
        bzg comment comment_someone_mailed_me.txt
        bzg check maybe_corrupt_article.txt
        bzg update LOCAL
        bzg update REMOTE

);
}


if ($ARGV[0] eq "help") {
    print_usage and exit 0;
}

if ($ARGV[0] eq "add") {
    if ($ARGV[1] && -e $ARGV[1]) {
        print "adding article $ARGV[1] to blog articles ... ";
#        add_article($ARGV[1]);
        print " DONE!\n";
    }
    else {
        print "$ARGV[1] is not a file, please specify a path to the article file.\n";
    }
}
elsif ($ARGV[0] eq "delete") {
    if ($ARGV[1] && $ARGV[1] =~ m/[[:alnum:]]{16}/) {
        print "deleting article $ARGV[1] from articles ... ";
#        delete_article($ARGV[1]);
        print " DONE!\n";
    }
    else {
        print "$ARGV[1] is not a valid id, please specify a correct id.\n";
    }
}
elsif ($ARGV[0] eq "replace") {
    if ($ARGV[1] && $ARGV[1] =~ m/[[:alnum:]]{16}/) {
        if ($ARGV[2] && -e $ARGV[2]) {
            print "replacing article $ARGV[1] with $ARGV[2] ... ";
#        replace_article($ARGV[1], $ARGV[2]);
        print " DONE!\n";
        }
        else {
            print "$ARGV[2] is not a file, please specify a path to the article file.\n";
        }
    }
    else {
        print "$ARGV[1] is not a valid id, please specify a correct id.\n";
    }
}
elsif ($ARGV[0] eq "check") {
    if ($ARGV[1] && -e $ARGV[1]) {
        print "checking article $ARGV[1] for correctness ... ";
#        check_article($ARGV[1]);
        print " DONE!\n";
    }
    else {
        print "$ARGV[1] is not a file, please specify a path to the article file.\n";
    }
}
elsif ($ARGV[0] eq "comment") {
    if ($ARGV[1] && $ARGV[1] =~ m/[[:alnum:]]{16}/) {
        if ($ARGV[2] && -e $ARGV[2]) {
            print "commenting article $ARGV[1] with $ARGV[2] ... ";
#        comment_article($ARGV[1], $ARGV[2]);
        print " DONE!\n";
        }
        else {
            print "$ARGV[2] is not a file, please specify a path to the comment file.\n";
        }
    }
    else {
        print "$ARGV[1] is not a valid id, please specify a correct id.\n";
    }
}
elsif ($ARGV[0] eq "update") {
    if ($ARGV[1] && $ARGV[1] eq "LOCAL") {
        print "updating local bazinga structure ... ";
#        update_bazinga($ARGV[1]);
        print " DONE!\n";
    }
    elsif ($ARGV[1] && $ARGV[1] eq "REMOTE") {
        print "updating remote bazinga structure  ... ";
#        update_bazinga($ARGV[1]);
        print " DONE!\n";
    }
    else {
        print "$ARGV[1] is not a valid identifier. Needs to be LOCAL or REMOTE.\n";
    }
}

sub add_article {};
sub delete_article {};
sub replace_article {};
sub comment_article {};
sub check_article {};
sub update_bazinga {};
